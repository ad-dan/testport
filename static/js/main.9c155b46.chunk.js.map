{"version":3,"sources":["logo.svg","components/LandingPage.jsx","components/NavButton.jsx","components/NavPage.jsx","components/LoadingPage.jsx","components/Projects.jsx","components/Skills.jsx","components/About.jsx","components/Contacts.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","LandingPage","react_default","a","createElement","className","NavButton","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","toggle","add","active","handleClick","onClick","React","Component","NavPage","toggleNav","setState","displayNav","_this2","components_NavButton","react_transition_group","timeout","in","concat","Link","to","LoadingPage","Project","Loadable","loader","e","then","bind","loading","Projects","Skills_Project","About_Project","Contacts_Project","App","BrowserRouter","components_NavPage","Route","exact","path","process","component","MainPage","ProjectsPage","SkillsPage","AboutPage","ContactPage","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9c155b46.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport '../assets/css/landing.scss';\r\n\r\nconst LandingPage = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"hero\">\r\n        <div className=\"hero-body\">\r\n          <div>\r\n            <span className=\"title\">Aditya D.</span>\r\n          </div>\r\n          <div>\r\n            <span className=\"subtitle\">Web Developer</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","import React from 'react';\r\nimport '../assets/css/navbutton.scss';\r\n\r\nclass NavButton extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      toggle: false\r\n    };\r\n  }\r\n  render() {\r\n    const add = this.props.active ? 'is-active' : '';\r\n    const { handleClick } = this.props;\r\n    return (\r\n      <div onClick={handleClick} className={'circle ' + add}>\r\n        <span className=\"burger-icon\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavButton;\r\n","import React from 'react';\r\nimport '../assets/css/navpage.scss';\r\nimport NavButton from './NavButton';\r\nimport { Link } from 'react-router-dom';\r\nimport { Transition } from 'react-transition-group';\r\n\r\nclass NavPage extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      displayNav: false\r\n    };\r\n  }\r\n  toggleNav = () => {\r\n    this.setState({\r\n      toggle: !this.state.toggle\r\n    });\r\n  };\r\n  render() {\r\n    const duration = 300;\r\n    return (\r\n      <div>\r\n        <NavButton handleClick={this.toggleNav} active={this.state.toggle} />\r\n        <Transition timeout={duration} in={this.state.toggle}>\r\n          {state => (\r\n            <div className={'containern ' + `navy-${state}`}>\r\n              <div className=\"nav-container\">\r\n                <Link to=\"/\" onClick={this.toggleNav}>\r\n                  {' '}\r\n                  <div className=\"nav-item\">\r\n                    <span>Home</span>\r\n                  </div>\r\n                </Link>\r\n                <Link to=\"/projects\" onClick={this.toggleNav}>\r\n                  {' '}\r\n                  <div className=\"nav-item\">\r\n                    <span> Projects</span>\r\n                  </div>\r\n                </Link>\r\n                <Link to=\"/skills\" onClick={this.toggleNav}>\r\n                  <div className=\"nav-item\">\r\n                    <span>Skills</span>\r\n                  </div>\r\n                </Link>\r\n                <Link to=\"/about\" onClick={this.toggleNav}>\r\n                  <div className=\"nav-item\">\r\n                    <span>About</span>\r\n                  </div>\r\n                </Link>\r\n                <Link to=\"/contact\" onClick={this.toggleNav}>\r\n                  <div className=\"nav-item\">\r\n                    <span>Contact</span>\r\n                  </div>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Transition>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavPage;\r\n","import React from 'react';\r\nimport '../assets/css/loading.scss';\r\n\r\nconst LoadingPage = () => (\r\n  <div className=\"containerl\">\r\n    <div className=\"lds-roller\">\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default LoadingPage;\r\n","import React from 'react';\r\nimport Loadable from 'react-loadable';\r\nimport LoadingPage from './LoadingPage';\r\n\r\nconst Project = Loadable({\r\n  loader: () => import('./ProjectsPage'),\r\n  loading: LoadingPage\r\n});\r\n\r\nexport default class Projects extends React.Component {\r\n  render() {\r\n    return <Project />;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Loadable from 'react-loadable';\r\nimport LoadingPage from './LoadingPage';\r\n\r\nconst Project = Loadable({\r\n  loader: () => import('./SkillsPage'),\r\n  loading: LoadingPage\r\n});\r\n\r\nexport default class Projects extends React.Component {\r\n  render() {\r\n    return <Project />;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Loadable from 'react-loadable';\r\nimport LoadingPage from './LoadingPage';\r\n\r\nconst Project = Loadable({\r\n  loader: () => import('./AboutPage'),\r\n  loading: LoadingPage\r\n});\r\n\r\nexport default class Projects extends React.Component {\r\n  render() {\r\n    return <Project />;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Loadable from 'react-loadable';\r\nimport LoadingPage from './LoadingPage';\r\n\r\nconst Project = Loadable({\r\n  loader: () => import('./ContactPage'),\r\n  loading: LoadingPage\r\n});\r\n\r\nexport default class Projects extends React.Component {\r\n  render() {\r\n    return <Project />;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport MainPage from './components/LandingPage';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport NavPage from './components/NavPage';\nimport ProjectsPage from './components/Projects';\nimport SkillsPage from './components/Skills';\nimport AboutPage from './components/About';\nimport ContactPage from './components/Contacts';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <NavPage />\n          <Route\n            exact\n            path={`${process.env.PUBLIC_URL}/`}\n            component={MainPage}\n          />\n          <Route\n            path={`${process.env.PUBLIC_URL}/projects`}\n            component={ProjectsPage}\n          />\n          <Route\n            path={`${process.env.PUBLIC_URL}/skills`}\n            component={SkillsPage}\n          />\n          <Route\n            path={`${process.env.PUBLIC_URL}/about`}\n            component={AboutPage}\n          />\n          <Route\n            path={`${process.env.PUBLIC_URL}/contact`}\n            component={ContactPage}\n          />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}